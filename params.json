{"name":"Wikidrain","tagline":"A simple PHP wrapper for the WikiMedia API centralized around querying Wikipedia articles ","body":"wikidrain\r\n===================================================================================\r\n\r\nA PHP wrapper for the WikiMedia API centralized around querying Wikipedia articles.\r\n\r\nThere are many php classes, indeed complete frameworks, dedicated to the WikiMedia\r\nAPI. But none of them are easy to implement, are accessible to those just learning\r\nPHP, or focus on simply querying data from Wikipedia.  The goal of the wikidrain \r\nproject is to develop a production-quality PHP library dedicated to easy, simple, \r\nand efficient querying of Wikipedia articles.\r\n\r\n\r\nUsage:\r\n===================================================================================\r\n\r\nwikidrain is very simple to use, just make a new instance of wikidrain:\r\n\r\n```php\r\n<?php\r\n    $wiki = new wikidrain('wikidrain/1.0 (http://www.example.com/)');\r\n?>\r\n```\r\n\r\nNOTE: You must supply your user-agent info, here the example header is:\r\n      'wikidrain/1.0 (http://www.example.com/)'\r\n\r\nTo search wikipedia for articles, use the Search method:\r\nThis returns a multidimensional array...\r\n\r\n```php\r\n<?php\r\n    $wiki = new wikidrain('wikidrain/1.0 (http://www.example.com/)');\r\n    $result = $wiki->Search('API');\r\n?>\r\n```\r\n\r\nTo get the sections of a wikipedia page, use the getSections method:\r\nThis also returns a multidimensional array...\r\n\r\n```php\r\n<?php\r\n    $wiki = new wikidrain('wikidrain/1.0 (http://www.example.com/)');\r\n    $result = $wiki->getSections('API');\r\n?>\r\n```\r\n\r\nNOTE: Wikidrain does not include any error checking/verification that the article\r\n      exists, so be sure to only request the sections/text of articles that were\r\n      returned by the Search() method...\r\n\r\nTo get the text of a section from a wikipedia page, use the getText\r\nmethod.\r\nThis returns text...\r\n\r\n```php\r\n<?php\r\n    $wiki = new wikidrain('wikidrain/1.0 (http://www.example.com/)');\r\n    $result = $wiki->getText('API', '0');\r\n?>\r\n```\r\n\r\nNOTE: Again, wikidrain does not include any error checking/verification to determine\r\n      if an article or section exists, so make sure to only request data from pages/\r\n      sections returned by the Search() and getSections() methods...\r\n\r\nTo get the list of articles listed in the 'See also' section, use the getRelated\r\nmethod\r\nThis returns an array...\r\n\r\n```php\r\n<?php\r\n    $wiki = new wikidrain('wikidrain/1.0 (http://www.example.com/)');\r\n    $wiki->getRelated('API');\r\n?>\r\n```\r\n\r\n\r\nTODO:\r\n===================================================================================\r\n\r\nCurrently, the objectives are as follows:\r\n\r\n1. Anything to put less strain on the wikipedia servers\r\n\r\n2. A method to return the wikipedia donation banner\r\n\r\n3. Error checking\r\n\r\n4. Any improvement to the parseText method\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}